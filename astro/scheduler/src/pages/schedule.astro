---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import DatePicker from "../components/DatePicker.astro";
import TimeSlots from "../components/TimeSlots.astro";
import BookingForm from "../components/BookingForm.astro";
import "../styles/global.css";
import { createWixClient } from "../utils/wix-client";
import { BUSINESS_NAME } from "../utils/constants";

// Create Wix client for server-side operations
const wixClient = createWixClient();

// Prefetch available services
const { items: servicesList } = await wixClient.services.queryServices().find();
const freeService = servicesList.find(service => service.name.toLowerCase().includes("free"));
const premiumService = servicesList.find(service => !service.name.toLowerCase().includes("free"));
---

<Layout>
  <div class="min-h-screen bg-gradient-to-b from-white to-secondary/10">
    <Navbar />

    <div class="max-w-7xl mx-auto pt-32 pb-16 px-4">
      <!-- Back button -->
      <div class="mb-6">
        <a href="/" class="inline-flex items-center space-x-2 text-sm font-medium text-gray-600 hover:text-gray-900">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M19 12H5M12 19l-7-7 7-7"/>
          </svg>
          <span>Back to Home</span>
        </a>
      </div>

      <!-- Header -->
      <div class="text-center mb-8 animate-fade-up">
        <div class="mx-auto mb-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-primary" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="16" y1="2" x2="16" y2="6"></line>
            <line x1="8" y1="2" x2="8" y2="6"></line>
            <line x1="3" y1="10" x2="21" y2="10"></line>
          </svg>
        </div>
        <h1 class="text-3xl md:text-4xl font-bold mb-2 bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent">
          Schedule Your Appointment
        </h1>
      </div>

      <div class="text-center animate-fade-up" style="animation-delay: 100ms;">
        <p class="text-muted-foreground mb-12 max-w-2xl mx-auto">
          Select a date and time that works for you, and fill in your
          details to complete the booking with {BUSINESS_NAME}.
        </p>
      </div>
      
      <!-- Session type selector -->
      <div class="text-center mb-8 animate-fade-up" style="animation-delay: 100ms;">
        <form id="session-form" class="flex justify-center space-x-4">
          <label class="flex items-center space-x-2">
            <input
              type="radio"
              name="sessionType"
              value="free"
              checked
            />
            <span>Free Session (0.5h)</span>
          </label>
          <label class="flex items-center space-x-2">
            <input
              type="radio"
              name="sessionType"
              value="premium"
            />
            <span>Premium Session (2h, 100â‚¬)</span>
          </label>
        </form>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Date picker -->
        <div class="animate-fade-up" style="animation-delay: 200ms;">
          <DatePicker />
        </div>

        <!-- Time slots -->
        <div class="animate-fade-up" style="animation-delay: 300ms;">
          <TimeSlots />
        </div>

        <!-- Booking form -->
        <div id="booking-form" class="animate-fade-up" style="animation-delay: 400ms;">
          <BookingForm />
        </div>
      </div>
    </div>

    <Footer />
  </div>
</Layout>

<script>
  // Handle session type selection
  const sessionForm = document.getElementById('session-form');
  
  if (sessionForm) {
    sessionForm.addEventListener('change', (e) => {
      if (e.target.name === 'sessionType') {
        // Dispatch event to notify components
        const event = new CustomEvent('sessionTypeChanged', {
          detail: { type: e.target.value }
        });
        document.dispatchEvent(event);
      }
    });
  }
</script>